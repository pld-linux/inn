diff -dur inn-2.4.1.orig/authprogs/smbval/rfcnb-common.h inn-2.4.1/authprogs/smbval/rfcnb-common.h
--- inn-2.4.1.orig/authprogs/smbval/rfcnb-common.h	2004-01-07 23:47:19.000000000 +0100
+++ inn-2.4.1/authprogs/smbval/rfcnb-common.h	2004-02-06 13:59:33.784923464 +0100
@@ -34,3 +34,4 @@
 } RFCNB_Pkt;
 
 
+void RFCNB_Free_Pkt(struct RFCNB_Pkt *pkt);
diff -dur inn-2.4.1.orig/authprogs/smbval/rfcnb.h inn-2.4.1/authprogs/smbval/rfcnb.h
--- inn-2.4.1.orig/authprogs/smbval/rfcnb.h	2004-01-07 23:47:19.000000000 +0100
+++ inn-2.4.1/authprogs/smbval/rfcnb.h	2004-02-06 13:59:26.203076080 +0100
@@ -47,4 +47,3 @@
 
 struct RFCNB_Pkt *RFCNB_Alloc_Pkt(int n);
 
-void RFCNB_Free_Pkt(struct RFCNB_Pkt *pkt);
diff -dur inn-2.4.1.orig/backends/innxmit.c inn-2.4.1/backends/innxmit.c
--- inn-2.4.1.orig/backends/innxmit.c	2004-01-07 23:47:19.000000000 +0100
+++ inn-2.4.1/backends/innxmit.c	2004-02-06 13:57:42.058908400 +0100
@@ -590,7 +590,7 @@
 	vec[0].iov_base = (char *) art->data;
 	vec[0].iov_len = len;
 	/* Add 14 bytes, which maybe will be the length of the Bytes header */
-	snprintf(buf, sizeof(buf), "Bytes: %d\r\n", art->len + 14);
+	snprintf(buf, sizeof(buf), "Bytes: %ld\r\n", (long)art->len + 14);
 	vec[1].iov_base = buf;
 	vec[1].iov_len = strlen(buf);
 	if (iscmsg) {
@@ -608,7 +608,7 @@
     if (GotInterrupt)
 	Interrupted(Article, MessageID);
     if (Debug) {
-	fprintf(stderr, "> [ article %d ]\n", art->len);
+	fprintf(stderr, "> [ article %ld ]\n", (long)art->len);
 	fprintf(stderr, "> .\n");
     }
 
diff -dur inn-2.4.1.orig/expire/expireover.c inn-2.4.1/expire/expireover.c
--- inn-2.4.1.orig/expire/expireover.c	2004-02-06 13:11:27.000000000 +0100
+++ inn-2.4.1/expire/expireover.c	2004-02-06 13:57:42.058908400 +0100
@@ -15,6 +15,7 @@
 #include <grp.h>
 #include <signal.h>
 #include <syslog.h>
+#include <time.h>
 
 #include "inn/innconf.h"
 #include "inn/messages.h"
diff -dur inn-2.4.1.orig/expire/makehistory.c inn-2.4.1/expire/makehistory.c
--- inn-2.4.1.orig/expire/makehistory.c	2004-02-06 13:11:27.000000000 +0100
+++ inn-2.4.1/expire/makehistory.c	2004-02-06 13:57:42.059908248 +0100
@@ -543,7 +543,7 @@
             fp->HeaderLength = p - fp->Header - 1;
 	} else if (RetrMode == RETR_ALL && strcmp(fp->Headername, "Bytes") == 0)
 	{
-		snprintf(bytes, sizeof(bytes), "%d", art->len);
+		snprintf(bytes, sizeof(bytes), "%ld", (long)art->len);
 		fp->HasHeader = true;
 		fp->Header = bytes;
 		fp->HeaderLength = strlen(bytes);
diff -dur inn-2.4.1.orig/frontends/ovdb_init.c inn-2.4.1/frontends/ovdb_init.c
--- inn-2.4.1.orig/frontends/ovdb_init.c	2004-01-07 23:47:19.000000000 +0100
+++ inn-2.4.1/frontends/ovdb_init.c	2004-02-06 13:57:42.059908248 +0100
@@ -113,7 +113,6 @@
     char group[MAXHEADERSIZE];
     u_int32_t v2 = 2;
     int ret;
-    char *p;
 
     notice("upgrading data to version 2");
     ret = open_db(&groupstats, "groupstats", DB_BTREE);
diff -dur inn-2.4.1.orig/frontends/ovdb_stat.c inn-2.4.1/frontends/ovdb_stat.c
--- inn-2.4.1.orig/frontends/ovdb_stat.c	2004-01-07 23:47:19.000000000 +0100
+++ inn-2.4.1/frontends/ovdb_stat.c	2004-02-06 13:57:42.059908248 +0100
@@ -8,6 +8,7 @@
 #include <errno.h>
 #include <signal.h>
 #include <syslog.h>
+#include <time.h>
 
 #include "inn/innconf.h"
 #include "inn/messages.h"
@@ -167,7 +168,7 @@
 	break;
     case SIZE:	/* 'a' points to size_t */
         memcpy(&sz, cp + tab[i].a, sizeof(sz));
-	sprintf(val, "%d", sz);
+	sprintf(val, "%ld", (long)sz);
 	break;
     case END:
         break;
diff -dur inn-2.4.1.orig/innd/chan.c inn-2.4.1/innd/chan.c
--- inn-2.4.1.orig/innd/chan.c	2004-01-07 23:47:19.000000000 +0100
+++ inn-2.4.1/innd/chan.c	2004-02-06 13:57:42.060908096 +0100
@@ -234,11 +234,11 @@
 	    syslog(L_NOTICE, "%s trace sleeping %ld 0x%p",
 		p, (long)cp->Waketime, (void *)cp->Waker);
 	if (FD_ISSET(cp->fd, &RCHANmask))
-	    syslog(L_NOTICE, "%s trace reading %d %s",
-		p, cp->In.used, MaxLength(cp->In.data, cp->In.data));
+	    syslog(L_NOTICE, "%s trace reading %ld %s",
+		p, (long)cp->In.used, MaxLength(cp->In.data, cp->In.data));
 	if (FD_ISSET(cp->fd, &WCHANmask))
-	    syslog(L_NOTICE, "%s trace writing %d %s",
-		p, cp->Out.left, MaxLength(cp->Out.data, cp->Out.data));
+	    syslog(L_NOTICE, "%s trace writing %ld %s",
+		p, (long)cp->Out.left, MaxLength(cp->Out.data, cp->Out.data));
     }
 }
 
@@ -311,7 +311,7 @@
 	} else if (cp->Type == CTreject)
 	    syslog(L_NOTICE, "%s %ld", name, cp->Rejected);
 	else if (cp->Out.left)
-	    syslog(L_NOTICE, "%s closed lost %d", name, cp->Out.left);
+	    syslog(L_NOTICE, "%s closed lost %ld", name, (long)cp->Out.left);
 	else
 	    syslog(L_NOTICE, "%s closed", name);
 	WCHANremove(cp);
@@ -390,8 +390,8 @@
 
     switch (cp->Type) {
     default:
-	snprintf(buff, sizeof(buff), "?%d(#%d@%d)?", cp->Type, cp->fd,
-                 cp - CHANtable);
+	snprintf(buff, sizeof(buff), "?%d(#%d@%ld)?", cp->Type, cp->fd,
+                 (long)(cp - CHANtable));
 	break;
     case CTany:
 	snprintf(buff, sizeof(buff), "any:%d", cp->fd);
@@ -778,13 +778,13 @@
     for (bp = &cp->Out; bp->left > 0; bp->left -= i, bp->used += i) {
 	i = CHANwrite(cp->fd, &bp->data[bp->used], bp->left);
 	if (i < 0) {
-	    syslog(L_ERROR, "%s cant flush count %d %m",
-		CHANname(cp), bp->left);
+	    syslog(L_ERROR, "%s cant flush count %ld %m",
+		CHANname(cp), (long)bp->left);
 	    return false;
 	}
 	if (i == 0) {
-	    syslog(L_ERROR, "%s cant flush count %d",
-		CHANname(cp), bp->left);
+	    syslog(L_ERROR, "%s cant flush count %ld",
+		CHANname(cp), (long)bp->left);
 	    return false;
 	}
     }
diff -dur inn-2.4.1.orig/innd/nc.c inn-2.4.1/innd/nc.c
--- inn-2.4.1.orig/innd/nc.c	2004-01-07 23:47:19.000000000 +0100
+++ inn-2.4.1/innd/nc.c	2004-02-06 13:57:42.061907944 +0100
@@ -133,8 +133,8 @@
     if (i == 0) {	/* if only data then try to write directly */
 	i = write(cp->fd, &bp->data[bp->used], bp->left);
 	if (Tracing || cp->Tracing)
-	    syslog(L_TRACE, "%s NCwritereply %d=write(%d, \"%.15s\", %d)",
-		CHANname(cp), i, cp->fd, &bp->data[bp->used], bp->left);
+	    syslog(L_TRACE, "%s NCwritereply %d=write(%d, \"%.15s\", %ld)",
+		CHANname(cp), i, cp->fd, &bp->data[bp->used], (long)bp->left);
 	if (i > 0) bp->used += i;
 	if (bp->used == bp->left) {
 	    /* all the data was written */
@@ -734,7 +734,7 @@
 
   readmore = movedata = false;
   if (Tracing || cp->Tracing)
-    syslog(L_TRACE, "%s NCproc Used=%d", CHANname(cp), cp->In.used);
+    syslog(L_TRACE, "%s NCproc Used=%ld", CHANname(cp), (long)cp->In.used);
 
   bp = &cp->In;
   if (bp->used == 0)
@@ -742,8 +742,8 @@
 
   for ( ; ; ) {
     if (Tracing || cp->Tracing) {
-      syslog(L_TRACE, "%s cp->Start=%d cp->Next=%d bp->Used=%d", CHANname(cp),
-	cp->Start, cp->Next, bp->used);
+      syslog(L_TRACE, "%s cp->Start=%d cp->Next=%d bp->Used=%ld", CHANname(cp),
+	cp->Start, cp->Next, (long)bp->used);
       if (bp->used > 15)
 	syslog(L_TRACE, "%s NCproc state=%d next \"%.15s\"", CHANname(cp),
 	  cp->State, &bp->data[cp->Next]);
@@ -1034,8 +1034,8 @@
        * directory with an unique timestamp, and start rnews on it.
        */
       if (Tracing || cp->Tracing)
-	syslog(L_TRACE, "%s CSgetxbatch: now %d of %d bytes", CHANname(cp),
-	  bp->used, cp->XBatchSize);
+	syslog(L_TRACE, "%s CSgetxbatch: now %ld of %d bytes", CHANname(cp),
+	  (long)bp->used, cp->XBatchSize);
 
       if (cp->Next != 0) {
 	/* data must start from the begining of the buffer */
@@ -1118,8 +1118,8 @@
     if (cp->State == CSwritegoodbye || cp->Type == CTfree)
       break;
     if (Tracing || cp->Tracing)
-      syslog(L_TRACE, "%s NCproc state=%d Start=%d Next=%d Used=%d",
-	CHANname(cp), cp->State, cp->Start, cp->Next, bp->used);
+      syslog(L_TRACE, "%s NCproc state=%d Start=%d Next=%d Used=%ld",
+	CHANname(cp), cp->State, cp->Start, cp->Next, (long)bp->used);
 
     if (movedata) { /* move data rather than extend buffer */
       TMRstart(TMR_DATAMOVE);
@@ -1164,8 +1164,8 @@
     int			i;
 
     if (Tracing || cp->Tracing)
-	syslog(L_TRACE, "%s NCreader Used=%d",
-	    CHANname(cp), cp->In.used);
+	syslog(L_TRACE, "%s NCreader Used=%ld",
+	    CHANname(cp), (long)cp->In.used);
 
     /* Read any data that's there; ignore errors (retry next time it's our
      * turn) and if we got nothing, then it's EOF so mark it closed. */
diff -dur inn-2.4.1.orig/innd/site.c inn-2.4.1/innd/site.c
--- inn-2.4.1.orig/innd/site.c	2004-01-07 23:47:19.000000000 +0100
+++ inn-2.4.1/innd/site.c	2004-02-06 13:57:42.062907792 +0100
@@ -198,8 +198,8 @@
         i = write(fd, &sp->Channel->Out.data[sp->Channel->Out.used],
                   sp->Channel->Out.left);
         if(i <= 0) {
-            syslog(L_ERROR,"%s cant spool count %d", CHANname(sp->Channel),
-                sp->Channel->Out.left);
+            syslog(L_ERROR,"%s cant spool count %ld", CHANname(sp->Channel),
+                (long)sp->Channel->Out.left);
             close(fd);
             return false;
         }
@@ -502,8 +502,8 @@
 	if (sp->FNLwantsnames) {
 	    i = strlen(sp->Param) + sp->FNLnames.used;
 	    if (i + (sizeof(TOKEN) * 2) + 3 >= sizeof buff) {
-		syslog(L_ERROR, "%s toolong need %d for %s",
-		    sp->Name, i + (sizeof(TOKEN) * 2) + 3, sp->Name);
+		syslog(L_ERROR, "%s toolong need %ld for %s",
+		    sp->Name, (long)(i + (sizeof(TOKEN) * 2) + 3), sp->Name);
 		break;
 	    }
 	    temp = xmalloc(i + 1);
@@ -763,7 +763,7 @@
 	     * site spooling, copy any data that might be pending,
 	     * and arrange to retry later. */
 	    if (!SITEspool(sp, (CHANNEL *)NULL)) {
-		syslog(L_ERROR, "%s loss %d bytes", sp->Name, cp->Out.left);
+		syslog(L_ERROR, "%s loss %ld bytes", sp->Name, (long)cp->Out.left);
 		return;
 	    }
 	    WCHANsetfrombuffer(sp->Channel, &cp->Out);
@@ -852,11 +852,11 @@
     else if (cp != NULL && cp->Out.left) {
 	if (sp->Type == FTfile || sp->Spooling) {
 	    /* Can't flush a file?  Hopeless. */
-	    syslog(L_ERROR, "%s dataloss %d", sp->Name, cp->Out.left);
+	    syslog(L_ERROR, "%s dataloss %ld", sp->Name, (long)cp->Out.left);
 	    return;
 	}
 	/* Must be a working channel; spool and retry. */
-	syslog(L_ERROR, "%s spooling %d bytes", sp->Name, cp->Out.left);
+	syslog(L_ERROR, "%s spooling %ld bytes", sp->Name, (long)cp->Out.left);
 	if (SITEspool(sp, cp))
 	    SITEflush(sp, false);
 	return;
@@ -1140,13 +1140,13 @@
     case FTfile:
 	p += strlen(strcpy(p, "file"));
 	if (sp->Buffered) {
-	    sprintf(p, " buffered(%d)", sp->Buffer.left);
+	    sprintf(p, " buffered(%ld)", (long)sp->Buffer.left);
 	    p += strlen(p);
 	}
 	else if ((cp = sp->Channel) == NULL)
 	    p += strlen(strcpy(p, " no channel?"));
 	else {
-	    sprintf(p, " open fd=%d, in mem %d", cp->fd, cp->Out.left);
+	    sprintf(p, " open fd=%d, in mem %ld", cp->fd, (long)cp->Out.left);
 	    p += strlen(p);
 	}
 	break;
@@ -1165,7 +1165,7 @@
 	if ((cp = sp->Channel) == NULL)
 	    p += strlen(strcpy(p, " no channel?"));
 	else {
-	    sprintf(p, " fd=%d, in mem %d", cp->fd, cp->Out.left);
+	    sprintf(p, " fd=%d, in mem %ld", cp->fd, (long)cp->Out.left);
 	    p += strlen(p);
 	}
 	break;
diff -dur inn-2.4.1.orig/innfeed/article.c inn-2.4.1/innfeed/article.c
--- inn-2.4.1.orig/innfeed/article.c	2004-01-07 23:47:19.000000000 +0100
+++ inn-2.4.1/innfeed/article.c	2004-02-06 13:57:42.062907792 +0100
@@ -639,7 +639,7 @@
 	if ((amtToRead + bytesInUse) > maxBytesInUse && maxLimitNotified == false) {
 	    maxLimitNotified = true ;
             notice ("ME exceeding maximum article byte limit: %d (max),"
-                    " %d (cur)", maxBytesInUse, amtToRead + bytesInUse) ;
+                    " %ld (cur)", maxBytesInUse, (long)(amtToRead + bytesInUse)) ;
 	}
 	
 	if ((article->contents = newBuffer (newBufferSize)) == NULL)
diff -dur inn-2.4.1.orig/innfeed/imap_connection.c inn-2.4.1/innfeed/imap_connection.c
--- inn-2.4.1.orig/innfeed/imap_connection.c	2004-01-07 23:47:19.000000000 +0100
+++ inn-2.4.1/innfeed/imap_connection.c	2004-02-06 13:57:42.064907488 +0100
@@ -795,7 +795,7 @@
     str_base = bufferBase(b);
     str = str_base;
     
-    while ( (((int)str) - ((int)str_base)) < size - headerlen)
+    while ( (((long)str) - ((long)str_base)) < size - headerlen)
     {
 	if (*str == header[0])
 	{
diff -dur inn-2.4.1.orig/innfeed/innlistener.c inn-2.4.1/innfeed/innlistener.c
--- inn-2.4.1.orig/innfeed/innlistener.c	2004-01-07 23:47:19.000000000 +0100
+++ inn-2.4.1/innfeed/innlistener.c	2004-02-06 13:57:42.065907336 +0100
@@ -653,7 +653,7 @@
             {
               /* XXX need to remember we've gone over the limit and not try
                  to add any more. */
-              warn ("ME internal too many hosts. (max is %d)", lis->hostLen) ;
+              warn ("ME internal too many hosts. (max is %ld)", (long)lis->hostLen) ;
               dropArticle (peerName,article) ;
             }
           else
diff -dur inn-2.4.1.orig/innfeed/tape.c inn-2.4.1/innfeed/tape.c
--- inn-2.4.1.orig/innfeed/tape.c	2004-01-07 23:47:19.000000000 +0100
+++ inn-2.4.1/innfeed/tape.c	2004-02-06 13:57:42.066907184 +0100
@@ -486,8 +486,8 @@
     indent [i] = ' ' ;
   indent [i] = '\0' ;
 
-  fprintf (fp,"%sGlobal Tape List : (count %d) {\n",
-           indent,activeTapeIdx) ;
+  fprintf (fp,"%sGlobal Tape List : (count %ld) {\n",
+           indent,(long)activeTapeIdx) ;
 
   for (i = 0 ; i < activeTapeIdx ; i++)
     printTapeInfo (activeTapes [i],fp,indentAmt + INDENT_INCR) ;
diff -dur inn-2.4.1.orig/lib/innconf.c inn-2.4.1/lib/innconf.c
--- inn-2.4.1.orig/lib/innconf.c	2004-01-07 23:47:19.000000000 +0100
+++ inn-2.4.1/lib/innconf.c	2004-02-06 13:57:42.066907184 +0100
@@ -680,7 +680,7 @@
         print_string(file, config_table[i].name, string_val, quoting);
         break;
     default:
-        die("internal error: invalid type in row %d of config table", i);
+        die("internal error: invalid type in row %ld of config table", (long)i);
         break;
     }
 }
diff -dur inn-2.4.1.orig/nnrpd/tls.c inn-2.4.1/nnrpd/tls.c
--- inn-2.4.1.orig/nnrpd/tls.c	2004-01-07 23:47:19.000000000 +0100
+++ inn-2.4.1/nnrpd/tls.c	2004-02-06 13:57:42.067907032 +0100
@@ -67,6 +67,7 @@
 
 /* outside the ifdef so `make depend` works even ifndef HAVE_SSL */
 #include "tls.h"
+#include "sasl_config.h"
 
 #ifdef HAVE_SSL
 
diff -dur inn-2.4.1.orig/nnrpd/tls.h inn-2.4.1/nnrpd/tls.h
--- inn-2.4.1.orig/nnrpd/tls.h	2004-01-07 23:47:19.000000000 +0100
+++ inn-2.4.1/nnrpd/tls.h	2004-02-06 13:57:42.067907032 +0100
@@ -28,6 +28,7 @@
 #include <openssl/pem.h>
 #include <openssl/x509.h>
 #include <openssl/ssl.h>
+#include <openssl/rand.h>
 
 /* init tls engine */
 int tls_init_serverengine(int verifydepth, /* depth to verify */
diff -dur inn-2.4.1.orig/storage/cnfs/cnfs.c inn-2.4.1/storage/cnfs/cnfs.c
--- inn-2.4.1.orig/storage/cnfs/cnfs.c	2004-01-07 23:47:19.000000000 +0100
+++ inn-2.4.1/storage/cnfs/cnfs.c	2004-02-06 13:57:42.068906880 +0100
@@ -375,8 +375,8 @@
   len = strtoul(l, NULL, 10) * (off_t)1024;	/* This value in KB in decimal */
   if (S_ISREG(sb.st_mode) && len != sb.st_size) {
     if (sizeof(CYCBUFFEXTERN) > (size_t) sb.st_size) {
-      syslog(L_NOTICE, "%s: length must be at least '%u' for '%s' cycbuff(%ld bytes)",
-	LocalLogName, sizeof(CYCBUFFEXTERN), cycbuff->name, (long)sb.st_size);
+      syslog(L_NOTICE, "%s: length must be at least '%lu' for '%s' cycbuff(%ld bytes)",
+	LocalLogName, (unsigned long)sizeof(CYCBUFFEXTERN), cycbuff->name, (long)sb.st_size);
       free(cycbuff);
       return false;
     }
diff -dur inn-2.4.1.orig/storage/overdata.c inn-2.4.1/storage/overdata.c
--- inn-2.4.1.orig/storage/overdata.c	2004-01-07 23:47:19.000000000 +0100
+++ inn-2.4.1/storage/overdata.c	2004-02-06 13:57:42.068906880 +0100
@@ -174,7 +174,7 @@
     for (field = 0; field < ARRAY_SIZE(fields); field++) {
         buffer_append(overview, "\t", 1);
         if (field == 5) {
-            snprintf(buffer, sizeof(buffer), "%u", length);
+            snprintf(buffer, sizeof(buffer), "%lu", (unsigned long)length);
             buffer_append(overview, buffer, strlen(buffer));
         } else
             build_header(article, length, fields[field], overview);
diff -dur inn-2.4.1.orig/storage/timecaf/caf.c inn-2.4.1/storage/timecaf/caf.c
--- inn-2.4.1.orig/storage/timecaf/caf.c	2004-02-06 13:11:27.000000000 +0100
+++ inn-2.4.1/storage/timecaf/caf.c	2004-02-06 13:57:42.069906728 +0100
@@ -1518,7 +1518,7 @@
 	    CAFTOCENT *tocp2;
 
 	    if (verbose) {
-		printf("Compacting   %s: Free=%d (%f%%)\n", path, head.Free, percentfree);
+		printf("Compacting   %s: Free=%ld (%f%%)\n", path, (long)head.Free, percentfree);
 	    }
 
 	    delta = newlow - head.Low;
@@ -1571,7 +1571,7 @@
 	} else {
 	    /* need neither full cleaning nor compaction, so return. */
 	    if (verbose) {
-		printf("Not cleaning %s: Free=%d (%f%%)\n", path, head.Free, percentfree);
+		printf("Not cleaning %s: Free=%ld (%f%%)\n", path, (long)head.Free, percentfree);
 	    }
 	    fclose(infile);
 	    free(tocarray);
@@ -1611,7 +1611,7 @@
 #endif    
 
     if (verbose) {
-	printf("Am  cleaning %s: Free=%d (%f%%) %s\n", path, head.Free,
+	printf("Am  cleaning %s: Free=%ld (%f%%) %s\n", path, (long)head.Free,
 	       percentfree, toc_needs_expansion ? "(Expanding TOC)" : "");
     }
 
